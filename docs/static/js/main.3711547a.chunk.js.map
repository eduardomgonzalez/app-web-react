{"version":3,"sources":["assets/avatar.png","components/UserName.js","components/Avatar.js","components/Header.js","components/Tablehead.js","components/Tablebody.js","components/TableComponent.js","components/Error.js","components/Form.js","components/Section.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserName","user","nombre","apellido","Avatar","forwardRef","props","ref","src","AvatarLogo","alt","className","id","Header","Tablehead","TableHead","TableRow","TableCell","Tablebody","users","deleteUser","usersValues","map","index","key","name","job","Button","variant","color","onClick","TableBody","TableComponent","Grid","item","xs","Table","Error","mensaje","Form","setUsers","handleUpload","useState","data","setData","error","setError","handleChange","e","target","value","md","onSubmit","preventDefault","trim","container","FormControl","InputLabel","htmlFor","Input","startAdornment","InputAdornment","position","AccountCircle","type","onChange","Work","inputFile","accept","inputName","Section","date","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","filter","i","Footer","href","App","Date","setDate","refAvatar","React","createRef","refInputFile","refInputName","useEffect","timerId","setInterval","clearInterval","toLocaleTimeString","current","files","reader","FileReader","readAsDataURL","onload","textContent","imageUrl","imageWidth","imageAlt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3711547a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.0d855cb8.png\";","import React from \"react\";\r\n\r\nconst UserName = ({ user }) => {\r\n  const { nombre, apellido } = user;\r\n  return (\r\n    <h4>\r\n      Hola, {nombre} {apellido}\r\n    </h4>\r\n  );\r\n};\r\n\r\nexport default UserName;\r\n","import React from \"react\";\r\nimport AvatarLogo from \"../assets/avatar.png\";\r\nimport { forwardRef } from \"react\";\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  return (\r\n    <img\r\n      src={AvatarLogo}\r\n      alt=\"avatar\"\r\n      className=\"avatar__img\"\r\n      id=\"img-avatar\"\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport UserName from \"./UserName\";\r\nimport Avatar from \"./Avatar\";\r\nimport { forwardRef } from \"react\";\r\n\r\nconst Header = forwardRef((props, ref) => {\r\n  const user = {\r\n    nombre: \"Eduardo\",\r\n    apellido: \"Gonzalez\",\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Striata</h1>\r\n      <div className=\"header__right\">\r\n        <UserName user={user} />\r\n        <Avatar ref={ref} />\r\n      </div>\r\n    </header>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { TableHead, TableRow, TableCell } from \"@material-ui/core/\";\r\n\r\nconst Tablehead = () => {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell>Nombre</TableCell>\r\n        <TableCell>Oficio</TableCell>\r\n        <TableCell>Eliminar</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n};\r\n\r\nexport default Tablehead;\r\n","import React from \"react\";\r\nimport { Button, TableBody, TableRow, TableCell } from \"@material-ui/core\";\r\n\r\nconst Tablebody = ({ users, deleteUser }) => {\r\n  let usersValues = users.map((user, index) => (\r\n    <TableRow key={index}>\r\n      <TableCell>{user.name}</TableCell>\r\n      <TableCell>{user.job}</TableCell>\r\n      <TableCell>\r\n        <Button\r\n          className=\"Mui-button\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => deleteUser(index)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  ));\r\n\r\n  return <TableBody>{usersValues}</TableBody>;\r\n};\r\n\r\nexport default Tablebody;\r\n","import React from \"react\";\r\nimport Tablehead from \"./Tablehead\";\r\nimport Tablebody from \"./Tablebody\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Table } from \"@material-ui/core/\";\r\n\r\nconst TableComponent = ({ users, deleteUser }) => {\r\n  return (\r\n    <Grid item xs={8}>\r\n      <Table>\r\n        <Tablehead />\r\n        <Tablebody users={users} deleteUser={deleteUser} />\r\n      </Table>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ mensaje }) => {\r\n  return <span className=\"error\">{mensaje}</span>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport Error from \"./Error\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Button,\r\n  Grid,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nimport { AccountCircle, Work } from \"@material-ui/icons\";\r\n\r\nconst Form = forwardRef(({ setUsers, handleUpload }, ref) => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    job: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validacion de inputs vacíos\r\n    if (data.name.trim() === \"\" || data.job.trim() === \"\") {\r\n      setError(true);\r\n      return;\r\n    }\r\n    setUsers((users) => [...users, data]);\r\n    setError(false);\r\n    setData({\r\n      name: \"\",\r\n      job: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid item md={4}>\r\n      <section className=\"form\">\r\n        {/* Cargar datos */}\r\n        <form className=\"form-material\" onSubmit={handleSubmit}>\r\n          {error && <Error mensaje=\"Ambos campos son obligatorios\" />}\r\n          <h2 className=\"form-material__title\">Agregar Datos</h2>\r\n          <Grid container>\r\n            <Grid item md={12}>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"name\">Nombre</InputLabel>\r\n                <Input\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  }\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  value={data.name}\r\n                  onChange={handleChange}\r\n                ></Input>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"job\">Oficio</InputLabel>\r\n                <Input\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <Work />\r\n                    </InputAdornment>\r\n                  }\r\n                  id=\"job\"\r\n                  name=\"job\"\r\n                  type=\"text\"\r\n                  value={data.job}\r\n                  onChange={handleChange}\r\n                ></Input>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Cargar Datos\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n        {/* Cargar Avatar */}\r\n        <div className=\"avatar\">\r\n          <h2 className=\"avatar__title\">Cambiar Avatar</h2>\r\n          <div className=\"avatar__field\">\r\n            <label htmlFor=\"inputId\">Selecionar archivo</label> <br />\r\n            <input\r\n              type=\"file\"\r\n              name=\"\"\r\n              id=\"inputId\"\r\n              ref={ref.inputFile}\r\n              accept=\"image/*\"\r\n            />\r\n            <span id=\"input-name\" ref={ref.inputName}></span>\r\n          </div>\r\n          <div className=\"\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              onClick={handleUpload}\r\n            >\r\n              Guardar\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\nimport TableComponent from \"./TableComponent\";\r\nimport Form from \"./Form\";\r\nimport Swal from \"sweetalert2\";\r\nimport { forwardRef } from \"react\";\r\n\r\nconst Section = forwardRef(({ date, handleUpload }, ref) => {\r\n  const [users, setUsers] = useState([\r\n    {\r\n      name: \"Luis\",\r\n      job: \"Programador\",\r\n    },\r\n    {\r\n      name: \"Noelia\",\r\n      job: \"Profesora\",\r\n    },\r\n    {\r\n      name: \"Ada\",\r\n      job: \"Científica\",\r\n    },\r\n    {\r\n      name: \"Bill Gates\",\r\n      job: \"Programador\",\r\n    },\r\n    {\r\n      name: \"Gary McKinnon\",\r\n      job: \"Administrador\",\r\n    },\r\n    {\r\n      name: \"Elon Musk\",\r\n      job: \"Físico\",\r\n    },\r\n  ]);\r\n\r\n  const deleteUser = (index) => {\r\n    Swal.fire({\r\n      title: \"Estás seguro?\",\r\n      text: \"Eliminará un registro\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Si, Eliminar!\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        Swal.fire({\r\n          title: \"Eliminado!\",\r\n          text: \"Acaba de eliminar un registro\",\r\n          icon: \"success\",\r\n        });\r\n        setUsers(users.filter((user, i) => i !== index));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"date\">\r\n        <h4>{date}</h4>\r\n      </div>\r\n      <div className=\"data\">\r\n        <TableComponent users={users} deleteUser={deleteUser} />\r\n        <Form setUsers={setUsers} handleUpload={handleUpload} ref={ref} />\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <h4 className=\"footer__copy\">&copy; Todos los derechos reservados</h4>\r\n      <a\r\n        className=\"footer__author\"\r\n        href=\"https://eduardo-gonzalez-portafolio.now.sh/\"\r\n        target=\"blank\"\r\n      >\r\n        <h4 className=\"footer__author-name\">Eduardo González</h4>\r\n      </a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Section from \"./components/Section\";\nimport Footer from \"./components/Footer\";\nimport Swal from \"sweetalert2\";\n\nfunction App() {\n  const [date, setDate] = useState(new Date());\n\n  // Creo referencias\n  const refAvatar = React.createRef();\n  const refInputFile = React.createRef();\n  const refInputName = React.createRef();\n\n  useEffect(() => {\n    function tictac() {\n      setDate(new Date());\n    }\n\n    const timerId = setInterval(() => tictac(), 1000);\n\n    return function detenerIntervalo() {\n      clearInterval(timerId);\n    };\n  });\n\n  // Cambia al avatar en el header y muestra un modal con vista\n  const handleUpload = () => {\n    if (refInputFile.current.files[0]) {\n      // Creo un objeto de la clase FileReader\n      let reader = new FileReader();\n      // Leo el archivo y se lo paso al objeto FileReader\n      reader.readAsDataURL(refInputFile.current.files[0]);\n\n      // Cuando este listo ejecute el código interno\n      reader.onload = () => {\n        // Obtengo el <span> donde voy a poner el nombre de la imagen luego de cargarla\n        let imageName = refInputName.current;\n        imageName.textContent = refInputFile.current.files[0].name;\n\n        // Obtengo el elemento de mi Avatar\n        let avatar = refAvatar.current;\n        // Lo coloco en mi avatar\n        avatar.src = reader.result;\n\n        // Vista previa con ventana modal de SweetAlert2\n        Swal.fire({\n          imageUrl: reader.result,\n          imageWidth: 250,\n          imageAlt: \"Avatar\",\n        });\n      };\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header ref={refAvatar} />\n      <Section\n        date={date.toLocaleTimeString()}\n        handleUpload={handleUpload}\n        ref={{ inputFile: refInputFile, inputName: refInputName }}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}